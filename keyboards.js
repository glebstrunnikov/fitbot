const keyboards = {
  base: {
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" },
          { text: "–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", callback_data: "show_exes" },
        ],
        [
          { text: "–°–æ–∑–¥–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", callback_data: "create_ex" },
          { text: "–£–¥–∞–ª–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", callback_data: "delete_ex" },
        ],
        [
          { text: "–°–æ–∑–¥–∞—Ç—å –¥–µ–Ω—å", callback_data: "create_day" },
          { text: "–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å", callback_data: "delete_day" },
        ],
        [
          { text: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å", callback_data: "edit_day" },
          { text: "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data: "workout" },
        ],
      ],
    }),
  },

  escape: {
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" },
          { text: "–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", callback_data: "show_exes" },
        ],
      ],
    }),
  },

  editDay: (dayNo) => {
    if (!dayNo)
      return {
        reply_markup: JSON.stringify({
          inline_keyboard: [
            [{ text: "–î–æ–±–∞–≤–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", callback_data: "add_ex_day" }],
            [
              { text: "–£–¥–∞–ª–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", callback_data: "delete_ex_day" },
              { text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" },
            ],
          ],
        }),
      };
    else
      return {
        reply_markup: JSON.stringify({
          inline_keyboard: [
            [
              {
                text: "–î–æ–±–∞–≤–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                callback_data: `add_ex_day_${dayNo}`,
              },
            ],
            [
              {
                text: "–£–¥–∞–ª–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                callback_data: `delete_ex_day_${dayNo}`,
              },
              { text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" },
            ],
          ],
        }),
      };
  },

  custom: (buttons, mode, dummyText, named) => {
    const keyboard = buttons.map((el, i) => [
      {
        text: dummyText + (!named ? +i + 1 : el),
        callback_data: mode + (Number(i) + 1),
      },
    ]);
    keyboard.push([{ text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" }]);
    return {
      reply_markup: JSON.stringify({
        inline_keyboard: keyboard,
      }),
    };
  },

  ex: {
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [{ text: "–û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç üí™", callback_data: "default" }],
        [
          { text: "–ù–∞–ø–æ–º–Ω–∏—Ç—å", callback_data: "default" },
          { text: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "default" },
        ],
      ],
    }),
  },
};

export default keyboards;
